import sys
from colorama import Fore, init

init()

# Function to implement the Caesar cipher (for decryption)
def implement_caesar_cipher(message, key, decrypt=False):
    result = ""
    special_chars = "!@#$%^&*()_+-=[]{}|;:,.<>?/"

    for character in message:
        if character.isalpha():  # Check if the character is alphabetic
            shift = key if not decrypt else -key  # Calculate the shift based on the key

            if character.islower():  # Check if the character is lowercase
                result += chr(((ord(character) - ord('a') + shift) % 26) + ord('a'))  # Encrypt lowercase character
            else:
                result += chr(((ord(character) - ord('A') + shift) % 26) + ord('A'))  # Encrypt uppercase character
        else:
            # Preserve non-alphabetic characters
            result += " " if character in special_chars else character
    return result

# Input from the user
text_to_decrypt = input(f"{Fore.GREEN}[?] Please enter the encrypted message: ")
key = int(input(f"{Fore.GREEN}[?] Please specify the shift length: "))

# Check if the key is within the valid range
if key > 25 or key < 0:
    print(f"{Fore.RED}[!] Your shift length should be between 0 and 25 ")
    sys.exit()

# Decrypt the message and display the result
decrypted_message = implement_caesar_cipher(text_to_decrypt, key, decrypt=True)
print(f"{Fore.BLUE}[+] Decrypted message: {decrypted_message}")
